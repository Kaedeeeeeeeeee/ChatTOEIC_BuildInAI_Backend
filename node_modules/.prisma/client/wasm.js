
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.0
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.0",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  name: 'name',
  avatar: 'avatar',
  role: 'role',
  googleId: 'googleId',
  emailVerified: 'emailVerified',
  preferredLanguage: 'preferredLanguage',
  isActive: 'isActive',
  settings: 'settings',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLoginAt: 'lastLoginAt'
};

exports.Prisma.QuestionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  difficulty: 'difficulty',
  source: 'source',
  status: 'status',
  content: 'content',
  correctAnswer: 'correctAnswer',
  explanation: 'explanation',
  audioUrl: 'audioUrl',
  audioScript: 'audioScript',
  qualityScore: 'qualityScore',
  difficultyScore: 'difficultyScore',
  averageTime: 'averageTime',
  successRate: 'successRate',
  usageCount: 'usageCount',
  ratingCount: 'ratingCount',
  lastUsedAt: 'lastUsedAt',
  createdBy: 'createdBy',
  aiGeneratedData: 'aiGeneratedData',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  reviewNotes: 'reviewNotes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PracticeAnswerScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  questionId: 'questionId',
  userAnswer: 'userAnswer',
  isCorrect: 'isCorrect',
  timeSpent: 'timeSpent',
  practiceRecordId: 'practiceRecordId',
  createdAt: 'createdAt'
};

exports.Prisma.QuestionRatingScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  questionId: 'questionId',
  rating: 'rating',
  comment: 'comment',
  clarity: 'clarity',
  difficulty: 'difficulty',
  quality: 'quality',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PracticeRecordScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionId: 'sessionId',
  questionType: 'questionType',
  difficulty: 'difficulty',
  questionsCount: 'questionsCount',
  correctAnswers: 'correctAnswers',
  totalTime: 'totalTime',
  score: 'score',
  realQuestions: 'realQuestions',
  aiPoolQuestions: 'aiPoolQuestions',
  realtimeQuestions: 'realtimeQuestions',
  questions: 'questions',
  completedAt: 'completedAt'
};

exports.Prisma.ChatSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  questionId: 'questionId',
  questionData: 'questionData',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ChatMessageScalarFieldEnum = {
  id: 'id',
  sessionId: 'sessionId',
  role: 'role',
  content: 'content',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.VocabularyItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  word: 'word',
  definition: 'definition',
  phonetic: 'phonetic',
  audioUrl: 'audioUrl',
  context: 'context',
  meanings: 'meanings',
  language: 'language',
  reading: 'reading',
  jlpt: 'jlpt',
  commonality: 'commonality',
  sourceType: 'sourceType',
  sourceId: 'sourceId',
  notes: 'notes',
  mastered: 'mastered',
  tags: 'tags',
  definitionLoading: 'definitionLoading',
  definitionError: 'definitionError',
  nextReviewDate: 'nextReviewDate',
  reviewCount: 'reviewCount',
  correctCount: 'correctCount',
  incorrectCount: 'incorrectCount',
  easeFactor: 'easeFactor',
  interval: 'interval',
  addedAt: 'addedAt',
  lastReviewedAt: 'lastReviewedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StudyProgressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  questionType: 'questionType',
  difficulty: 'difficulty',
  totalQuestions: 'totalQuestions',
  correctAnswers: 'correctAnswers',
  averageTime: 'averageTime',
  bestScore: 'bestScore',
  lastPracticeAt: 'lastPracticeAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SubscriptionPlanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  nameJp: 'nameJp',
  priceCents: 'priceCents',
  currency: 'currency',
  interval: 'interval',
  intervalCount: 'intervalCount',
  stripePriceId: 'stripePriceId',
  stripeProductId: 'stripeProductId',
  features: 'features',
  dailyPracticeLimit: 'dailyPracticeLimit',
  dailyAiChatLimit: 'dailyAiChatLimit',
  maxVocabularyWords: 'maxVocabularyWords',
  isActive: 'isActive',
  sortOrder: 'sortOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserSubscriptionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  planId: 'planId',
  stripeCustomerId: 'stripeCustomerId',
  stripeSubscriptionId: 'stripeSubscriptionId',
  stripeSessionId: 'stripeSessionId',
  status: 'status',
  trialStart: 'trialStart',
  trialEnd: 'trialEnd',
  currentPeriodStart: 'currentPeriodStart',
  currentPeriodEnd: 'currentPeriodEnd',
  cancelAtPeriodEnd: 'cancelAtPeriodEnd',
  canceledAt: 'canceledAt',
  lastPaymentAt: 'lastPaymentAt',
  nextPaymentAt: 'nextPaymentAt',
  isTestAccount: 'isTestAccount',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UsageQuotaScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  resourceType: 'resourceType',
  usedCount: 'usedCount',
  limitCount: 'limitCount',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentTransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  stripeSessionId: 'stripeSessionId',
  stripePaymentId: 'stripePaymentId',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  subscriptionId: 'subscriptionId',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.APIUsageScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  endpoint: 'endpoint',
  method: 'method',
  statusCode: 'statusCode',
  responseTime: 'responseTime',
  userAgent: 'userAgent',
  ipAddress: 'ipAddress',
  createdAt: 'createdAt'
};

exports.Prisma.TokenBlacklistScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tokenId: 'tokenId',
  reason: 'reason',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt'
};

exports.Prisma.AdminSubscriptionLogScalarFieldEnum = {
  id: 'id',
  adminUserId: 'adminUserId',
  targetUserId: 'targetUserId',
  subscriptionId: 'subscriptionId',
  operationType: 'operationType',
  oldStatus: 'oldStatus',
  newStatus: 'newStatus',
  oldTestAccount: 'oldTestAccount',
  newTestAccount: 'newTestAccount',
  metadata: 'metadata',
  reason: 'reason',
  createdAt: 'createdAt'
};

exports.Prisma.EmailLogScalarFieldEnum = {
  id: 'id',
  type: 'type',
  status: 'status',
  recipientEmail: 'recipientEmail',
  recipientName: 'recipientName',
  userId: 'userId',
  subject: 'subject',
  templateName: 'templateName',
  templateData: 'templateData',
  htmlContent: 'htmlContent',
  emailProvider: 'emailProvider',
  providerEmailId: 'providerEmailId',
  sentAt: 'sentAt',
  deliveredAt: 'deliveredAt',
  openedAt: 'openedAt',
  clickedAt: 'clickedAt',
  errorMessage: 'errorMessage',
  errorCode: 'errorCode',
  retryCount: 'retryCount',
  maxRetries: 'maxRetries',
  metadata: 'metadata',
  tags: 'tags',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailTemplateScalarFieldEnum = {
  id: 'id',
  name: 'name',
  displayName: 'displayName',
  type: 'type',
  subject: 'subject',
  description: 'description',
  variables: 'variables',
  version: 'version',
  isActive: 'isActive',
  usageCount: 'usageCount',
  lastUsedAt: 'lastUsedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserEmailPreferenceScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  receiveSecurityAlerts: 'receiveSecurityAlerts',
  receiveSystemNotify: 'receiveSystemNotify',
  receiveWeeklyReport: 'receiveWeeklyReport',
  receiveFeatureNews: 'receiveFeatureNews',
  receivePromotional: 'receivePromotional',
  weeklyReportDay: 'weeklyReportDay',
  promotionalFrequency: 'promotionalFrequency',
  globalUnsubscribe: 'globalUnsubscribe',
  unsubscribeToken: 'unsubscribeToken',
  unsubscribedAt: 'unsubscribedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailStatsScalarFieldEnum = {
  id: 'id',
  date: 'date',
  totalSent: 'totalSent',
  totalDelivered: 'totalDelivered',
  totalFailed: 'totalFailed',
  totalBounced: 'totalBounced',
  totalOpened: 'totalOpened',
  totalClicked: 'totalClicked',
  totalUnsubscribed: 'totalUnsubscribed',
  totalComplaints: 'totalComplaints',
  verificationEmails: 'verificationEmails',
  notificationEmails: 'notificationEmails',
  marketingEmails: 'marketingEmails',
  openRate: 'openRate',
  clickRate: 'clickRate',
  deliveryRate: 'deliveryRate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  ADMIN: 'ADMIN',
  MODERATOR: 'MODERATOR'
};

exports.QuestionType = exports.$Enums.QuestionType = {
  LISTENING_PART1: 'LISTENING_PART1',
  LISTENING_PART2: 'LISTENING_PART2',
  LISTENING_PART3: 'LISTENING_PART3',
  LISTENING_PART4: 'LISTENING_PART4',
  READING_PART5: 'READING_PART5',
  READING_PART6: 'READING_PART6',
  READING_PART7: 'READING_PART7'
};

exports.DifficultyLevel = exports.$Enums.DifficultyLevel = {
  BEGINNER: 'BEGINNER',
  INTERMEDIATE: 'INTERMEDIATE',
  ADVANCED: 'ADVANCED'
};

exports.QuestionSource = exports.$Enums.QuestionSource = {
  REAL: 'REAL',
  AI_POOL: 'AI_POOL',
  AI_REALTIME: 'AI_REALTIME'
};

exports.QuestionStatus = exports.$Enums.QuestionStatus = {
  ACTIVE: 'ACTIVE',
  REVIEW: 'REVIEW',
  INACTIVE: 'INACTIVE',
  REJECTED: 'REJECTED'
};

exports.EmailType = exports.$Enums.EmailType = {
  REGISTRATION_VERIFICATION: 'REGISTRATION_VERIFICATION',
  PASSWORD_RESET: 'PASSWORD_RESET',
  EMAIL_CHANGE_CONFIRMATION: 'EMAIL_CHANGE_CONFIRMATION',
  WELCOME: 'WELCOME',
  SECURITY_ALERT: 'SECURITY_ALERT',
  SYSTEM_NOTIFICATION: 'SYSTEM_NOTIFICATION',
  FEATURE_ANNOUNCEMENT: 'FEATURE_ANNOUNCEMENT',
  WEEKLY_REPORT: 'WEEKLY_REPORT',
  UNSUBSCRIBE_CONFIRMATION: 'UNSUBSCRIBE_CONFIRMATION'
};

exports.EmailStatus = exports.$Enums.EmailStatus = {
  PENDING: 'PENDING',
  SENT: 'SENT',
  DELIVERED: 'DELIVERED',
  FAILED: 'FAILED',
  BOUNCED: 'BOUNCED',
  COMPLAINED: 'COMPLAINED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Question: 'Question',
  PracticeAnswer: 'PracticeAnswer',
  QuestionRating: 'QuestionRating',
  PracticeRecord: 'PracticeRecord',
  ChatSession: 'ChatSession',
  ChatMessage: 'ChatMessage',
  VocabularyItem: 'VocabularyItem',
  StudyProgress: 'StudyProgress',
  SubscriptionPlan: 'SubscriptionPlan',
  UserSubscription: 'UserSubscription',
  UsageQuota: 'UsageQuota',
  PaymentTransaction: 'PaymentTransaction',
  APIUsage: 'APIUsage',
  TokenBlacklist: 'TokenBlacklist',
  AdminSubscriptionLog: 'AdminSubscriptionLog',
  EmailLog: 'EmailLog',
  EmailTemplate: 'EmailTemplate',
  UserEmailPreference: 'UserEmailPreference',
  EmailStats: 'EmailStats'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/user/ChatTOEIC/ChatToeic/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/user/ChatTOEIC/ChatToeic/backend/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../backend/backend/prisma",
  "clientVersion": "6.16.0",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// ChatTOEIC v2.0 优化数据库结构\n// 支持三层题目系统：真实题目池 > AI题目池 > AI实时出题\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ===============================\n// 枚举类型定义\n// ===============================\n\nenum UserRole {\n  USER\n  ADMIN\n  MODERATOR // 可以审核AI题目进入题目池\n}\n\nenum QuestionType {\n  LISTENING_PART1\n  LISTENING_PART2\n  LISTENING_PART3\n  LISTENING_PART4\n  READING_PART5\n  READING_PART6\n  READING_PART7\n}\n\nenum DifficultyLevel {\n  BEGINNER\n  INTERMEDIATE\n  ADVANCED\n}\n\nenum QuestionSource {\n  REAL // 真实题目池（人工添加）\n  AI_POOL // AI题目池（用户评分后进入）\n  AI_REALTIME // AI实时生成（一次性）\n}\n\nenum QuestionStatus {\n  ACTIVE // 活跃使用中\n  REVIEW // 待审核（AI题目等待进入题目池）\n  INACTIVE // 暂停使用\n  REJECTED // 审核不通过\n}\n\n// ===============================\n// 用户系统\n// ===============================\n\nmodel User {\n  id                String   @id @default(cuid())\n  email             String   @unique\n  password          String?\n  name              String?\n  avatar            String?\n  role              UserRole @default(USER)\n  googleId          String?  @unique\n  emailVerified     Boolean  @default(false)\n  preferredLanguage String   @default(\"zh\")\n  isActive          Boolean  @default(true)\n\n  // 用户设置\n  settings Json?\n\n  // 关联数据\n  practiceRecords     PracticeRecord[]\n  chatSessions        ChatSession[]\n  vocabularyItems     VocabularyItem[]\n  studyProgress       StudyProgress[]\n  subscription        UserSubscription?\n  usageQuotas         UsageQuota[]\n  paymentTransactions PaymentTransaction[]\n\n  // 题目系统相关\n  questionRatings  QuestionRating[] // 用户对题目的评分\n  createdQuestions Question[] // 管理员创建的题目\n\n  // 管理员操作日志\n  adminSubscriptionLogs AdminSubscriptionLog[] // 作为管理员执行的操作\n  targetAdminLogs       AdminSubscriptionLog[] @relation(\"AdminLogTargetUser\") // 作为目标用户的操作记录\n\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  lastLoginAt DateTime?\n\n  @@map(\"users\")\n}\n\n// ===============================\n// 题目系统核心\n// ===============================\n\n// 题目主表\nmodel Question {\n  id String @id @default(cuid())\n\n  // 题目基本信息\n  type       QuestionType\n  difficulty DifficultyLevel\n  source     QuestionSource // 题目来源\n  status     QuestionStatus  @default(ACTIVE)\n\n  // 题目内容 (JSON结构，支持所有TOEIC题目类型)\n  content       Json // 统一的题目内容结构\n  correctAnswer String // 正确答案\n  explanation   String? // 解析\n\n  // 音频相关（听力题目）\n  audioUrl    String?\n  audioScript String? // 听力原文\n\n  // 题目质量指标\n  qualityScore    Float  @default(0.0) // 题目整体质量分（0-5分）\n  difficultyScore Float? // 实际难度分析\n  averageTime     Int? // 平均完成时间（秒）\n  successRate     Float? // 正确率\n\n  // 使用统计\n  usageCount  Int       @default(0) // 被使用次数\n  ratingCount Int       @default(0) // 评分次数\n  lastUsedAt  DateTime?\n\n  // 创建信息\n  createdBy       String? // 创建者ID（管理员创建的题目）\n  creator         User?   @relation(fields: [createdBy], references: [id])\n  aiGeneratedData Json? // AI生成题目的原始数据\n\n  // 审核信息（AI题目进入题目池时）\n  reviewedBy  String? // 审核者ID\n  reviewedAt  DateTime?\n  reviewNotes String?\n\n  // 关联数据\n  practiceAnswers PracticeAnswer[] // 用户答题记录\n  ratings         QuestionRating[] // 用户评分\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([type, difficulty, source, status])\n  @@index([qualityScore, usageCount])\n  @@map(\"questions\")\n}\n\n// 用户答题记录（详细）\nmodel PracticeAnswer {\n  id String @id @default(cuid())\n\n  userId     String\n  questionId String\n  question   Question @relation(fields: [questionId], references: [id])\n\n  // 答题信息\n  userAnswer String // 用户答案\n  isCorrect  Boolean\n  timeSpent  Int // 答题用时（秒）\n\n  // 关联练习记录\n  practiceRecordId String\n  practiceRecord   PracticeRecord @relation(fields: [practiceRecordId], references: [id], onDelete: Cascade)\n\n  createdAt DateTime @default(now())\n\n  @@unique([userId, questionId, practiceRecordId])\n  @@map(\"practice_answers\")\n}\n\n// 用户对题目的评分\nmodel QuestionRating {\n  id String @id @default(cuid())\n\n  userId     String\n  user       User     @relation(fields: [userId], references: [id])\n  questionId String\n  question   Question @relation(fields: [questionId], references: [id])\n\n  // 评分详情\n  rating  Int // 1-5分\n  comment String? // 用户评论\n\n  // 评分维度（可选）\n  clarity    Int? // 题目清晰度 1-5\n  difficulty Int? // 难度适中度 1-5\n  quality    Int? // 整体质量 1-5\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([userId, questionId])\n  @@map(\"question_ratings\")\n}\n\n// ===============================\n// 练习记录系统\n// ===============================\n\nmodel PracticeRecord {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  sessionId      String          @unique\n  questionType   QuestionType\n  difficulty     DifficultyLevel\n  questionsCount Int\n  correctAnswers Int\n  totalTime      Int // 总用时（秒）\n  score          Int? // TOEIC估分\n\n  // 题目来源统计\n  realQuestions     Int @default(0) // 使用的真实题目数\n  aiPoolQuestions   Int @default(0) // 使用的AI池题目数\n  realtimeQuestions Int @default(0) // 使用的实时AI题目数\n\n  // 详细答题记录\n  practiceAnswers PracticeAnswer[]\n\n  // 旧版兼容字段（逐步迁移）\n  questions Json? // 旧版题目存储方式\n\n  completedAt DateTime @default(now())\n\n  @@map(\"practice_records\")\n}\n\n// ===============================\n// 其他系统（保持原有结构）\n// ===============================\n\nmodel ChatSession {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  title    String?\n  messages ChatMessage[]\n\n  questionId   String? // 关联到题目讨论\n  questionData String? // 题目数据\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"chat_sessions\")\n}\n\nmodel ChatMessage {\n  id        String      @id @default(cuid())\n  sessionId String\n  session   ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)\n\n  role     String // \"user\" | \"assistant\"\n  content  String\n  metadata Json?\n\n  createdAt DateTime @default(now())\n\n  @@map(\"chat_messages\")\n}\n\nmodel VocabularyItem {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  word       String\n  definition String?\n  phonetic   String?\n  audioUrl   String?\n  context    String?\n  meanings   Json?\n\n  language    String   @default(\"en\")\n  reading     String?\n  jlpt        String[]\n  commonality Boolean?\n\n  sourceType String? // practice/review\n  sourceId   String?\n\n  notes    String?\n  mastered Boolean  @default(false)\n  tags     String[]\n\n  definitionLoading Boolean @default(false)\n  definitionError   Boolean @default(false)\n\n  nextReviewDate DateTime @default(now())\n  reviewCount    Int      @default(0)\n  correctCount   Int      @default(0)\n  incorrectCount Int      @default(0)\n  easeFactor     Float    @default(2.5)\n  interval       Int      @default(1)\n\n  addedAt        DateTime  @default(now())\n  lastReviewedAt DateTime?\n  updatedAt      DateTime  @updatedAt\n\n  @@unique([userId, word])\n  @@map(\"vocabulary_items\")\n}\n\nmodel StudyProgress {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  questionType QuestionType\n  difficulty   DifficultyLevel\n\n  totalQuestions Int       @default(0)\n  correctAnswers Int       @default(0)\n  averageTime    Float     @default(0)\n  bestScore      Int?\n  lastPracticeAt DateTime?\n\n  updatedAt DateTime @updatedAt\n\n  @@unique([userId, questionType, difficulty])\n  @@map(\"study_progress\")\n}\n\n// ===============================\n// 订阅和支付系统\n// ===============================\n\nmodel SubscriptionPlan {\n  id              String  @id @default(cuid())\n  name            String\n  nameJp          String?\n  priceCents      Int\n  currency        String  @default(\"jpy\")\n  interval        String\n  intervalCount   Int     @default(1)\n  stripePriceId   String? @unique\n  stripeProductId String? @unique\n\n  features Json\n\n  // 使用限制\n  dailyPracticeLimit Int?\n  dailyAiChatLimit   Int?\n  maxVocabularyWords Int?\n\n  isActive  Boolean @default(true)\n  sortOrder Int     @default(0)\n\n  subscriptions UserSubscription[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"subscription_plans\")\n}\n\nmodel UserSubscription {\n  id     String           @id @default(cuid())\n  userId String           @unique\n  user   User             @relation(fields: [userId], references: [id], onDelete: Cascade)\n  planId String\n  plan   SubscriptionPlan @relation(fields: [planId], references: [id])\n\n  stripeCustomerId     String?\n  stripeSubscriptionId String? @unique\n  stripeSessionId      String?\n\n  status String\n\n  trialStart DateTime?\n  trialEnd   DateTime?\n\n  currentPeriodStart DateTime?\n  currentPeriodEnd   DateTime?\n  cancelAtPeriodEnd  Boolean   @default(false)\n  canceledAt         DateTime?\n\n  lastPaymentAt DateTime?\n  nextPaymentAt DateTime?\n\n  // 测试账户标记 - 用于管理员测试功能\n  isTestAccount Boolean @default(false)\n\n  paymentTransactions   PaymentTransaction[]\n  adminSubscriptionLogs AdminSubscriptionLog[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"user_subscriptions\")\n}\n\nmodel UsageQuota {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  resourceType String // \"daily_practice\", \"daily_ai_chat\", \"vocabulary_words\"\n  usedCount    Int    @default(0)\n  limitCount   Int? // null表示无限制\n\n  periodStart DateTime @default(now())\n  periodEnd   DateTime\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@unique([userId, resourceType, periodStart])\n  @@map(\"usage_quotas\")\n}\n\nmodel PaymentTransaction {\n  id     String @id @default(cuid())\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n\n  stripeSessionId String? @unique\n  stripePaymentId String? @unique\n\n  amount   Int\n  currency String @default(\"jpy\")\n  status   String\n\n  subscriptionId String?\n  subscription   UserSubscription? @relation(fields: [subscriptionId], references: [id])\n\n  metadata Json?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"payment_transactions\")\n}\n\n// ===============================\n// 系统管理\n// ===============================\n\nmodel APIUsage {\n  id           String  @id @default(cuid())\n  userId       String?\n  endpoint     String\n  method       String\n  statusCode   Int\n  responseTime Int\n  userAgent    String?\n  ipAddress    String?\n\n  createdAt DateTime @default(now())\n\n  @@map(\"api_usage\")\n}\n\nmodel TokenBlacklist {\n  id        String   @id @default(cuid())\n  userId    String\n  tokenId   String\n  reason    String\n  expiresAt DateTime\n  createdAt DateTime @default(now())\n\n  @@unique([userId, tokenId])\n  @@map(\"token_blacklist\")\n}\n\n// 管理员订阅操作日志\nmodel AdminSubscriptionLog {\n  id           String @id @default(cuid())\n  adminUserId  String // 执行操作的管理员ID\n  adminUser    User   @relation(fields: [adminUserId], references: [id], onDelete: Cascade)\n  targetUserId String // 被操作的用户ID\n  targetUser   User   @relation(\"AdminLogTargetUser\", fields: [targetUserId], references: [id], onDelete: Cascade)\n\n  subscriptionId String? // 相关的订阅ID（可选）\n  subscription   UserSubscription? @relation(fields: [subscriptionId], references: [id], onDelete: SetNull)\n\n  operationType  String // 操作类型: status_change, test_account_toggle, etc.\n  oldStatus      String? // 操作前状态\n  newStatus      String? // 操作后状态\n  oldTestAccount Boolean? // 操作前是否为测试账户\n  newTestAccount Boolean? // 操作后是否为测试账户\n\n  metadata Json? // 其他操作相关数据\n  reason   String? // 操作原因说明\n\n  createdAt DateTime @default(now())\n\n  @@map(\"admin_subscription_logs\")\n}\n\n// ===============================\n// 邮件系统\n// ===============================\n\n// 邮件类型枚举\nenum EmailType {\n  REGISTRATION_VERIFICATION\n  PASSWORD_RESET\n  EMAIL_CHANGE_CONFIRMATION\n  WELCOME\n  SECURITY_ALERT\n  SYSTEM_NOTIFICATION\n  FEATURE_ANNOUNCEMENT\n  WEEKLY_REPORT\n  UNSUBSCRIBE_CONFIRMATION\n}\n\n// 邮件状态枚举\nenum EmailStatus {\n  PENDING\n  SENT\n  DELIVERED\n  FAILED\n  BOUNCED\n  COMPLAINED\n}\n\n// 邮件发送记录\nmodel EmailLog {\n  id String @id @default(cuid())\n\n  // 基本信息\n  type   EmailType\n  status EmailStatus @default(PENDING)\n\n  // 收件人信息\n  recipientEmail String\n  recipientName  String?\n  userId         String? // 关联用户（如果有）\n\n  // 邮件内容\n  subject      String\n  templateName String // 使用的模板名称\n  templateData Json? // 模板参数数据\n  htmlContent  String? // 渲染后的HTML内容\n\n  // 发送信息\n  emailProvider   String  @default(\"resend\") // 邮件服务商\n  providerEmailId String? // 服务商返回的邮件ID\n\n  // 时间信息\n  sentAt      DateTime?\n  deliveredAt DateTime?\n  openedAt    DateTime? // 首次打开时间\n  clickedAt   DateTime? // 首次点击时间\n\n  // 错误信息\n  errorMessage String?\n  errorCode    String?\n  retryCount   Int     @default(0)\n  maxRetries   Int     @default(3)\n\n  // 元数据\n  metadata Json? // 额外的元数据\n  tags     String[] // 邮件标签\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([recipientEmail, type])\n  @@index([userId, type, createdAt])\n  @@index([status, sentAt])\n  @@map(\"email_logs\")\n}\n\n// 邮件模板管理\nmodel EmailTemplate {\n  id String @id @default(cuid())\n\n  // 模板基本信息\n  name        String    @unique // 模板名称标识符\n  displayName String // 显示名称\n  type        EmailType // 邮件类型\n\n  // 模板内容\n  subject     String // 邮件主题模板\n  description String? // 模板描述\n\n  // 模板变量定义\n  variables Json // 模板变量定义和说明\n\n  // 版本控制\n  version  Int     @default(1)\n  isActive Boolean @default(true)\n\n  // 使用统计\n  usageCount Int       @default(0)\n  lastUsedAt DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"email_templates\")\n}\n\n// 用户邮件偏好设置\nmodel UserEmailPreference {\n  id     String @id @default(cuid())\n  userId String @unique\n\n  // 邮件接收偏好\n  receiveSecurityAlerts Boolean @default(true) // 安全警告\n  receiveSystemNotify   Boolean @default(true) // 系统通知\n  receiveWeeklyReport   Boolean @default(true) // 周报\n  receiveFeatureNews    Boolean @default(true) // 功能推广\n  receivePromotional    Boolean @default(false) // 促销邮件\n\n  // 发送频率控制\n  weeklyReportDay      Int    @default(1) // 周报发送日期(1-7, 1=周一)\n  promotionalFrequency String @default(\"weekly\") // never, weekly, monthly\n\n  // 退订信息\n  globalUnsubscribe Boolean   @default(false) // 全局退订\n  unsubscribeToken  String?   @unique // 退订令牌\n  unsubscribedAt    DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"user_email_preferences\")\n}\n\n// 邮件统计汇总\nmodel EmailStats {\n  id String @id @default(cuid())\n\n  // 统计日期\n  date DateTime @unique @db.Date\n\n  // 发送统计\n  totalSent      Int @default(0)\n  totalDelivered Int @default(0)\n  totalFailed    Int @default(0)\n  totalBounced   Int @default(0)\n\n  // 用户交互统计\n  totalOpened       Int @default(0)\n  totalClicked      Int @default(0)\n  totalUnsubscribed Int @default(0)\n  totalComplaints   Int @default(0)\n\n  // 按类型统计\n  verificationEmails Int @default(0)\n  notificationEmails Int @default(0)\n  marketingEmails    Int @default(0)\n\n  // 计算字段 (可在应用层计算)\n  openRate     Float? // 打开率\n  clickRate    Float? // 点击率\n  deliveryRate Float? // 投递率\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"email_stats\")\n}\n",
  "inlineSchemaHash": "a3cfc189350a3db91873a1bde1eefc35c78a36b779bd3a9d0074f9411946929f",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"preferredLanguage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"settings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"practiceRecords\",\"kind\":\"object\",\"type\":\"PracticeRecord\",\"relationName\":\"PracticeRecordToUser\"},{\"name\":\"chatSessions\",\"kind\":\"object\",\"type\":\"ChatSession\",\"relationName\":\"ChatSessionToUser\"},{\"name\":\"vocabularyItems\",\"kind\":\"object\",\"type\":\"VocabularyItem\",\"relationName\":\"UserToVocabularyItem\"},{\"name\":\"studyProgress\",\"kind\":\"object\",\"type\":\"StudyProgress\",\"relationName\":\"StudyProgressToUser\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"UserSubscription\",\"relationName\":\"UserToUserSubscription\"},{\"name\":\"usageQuotas\",\"kind\":\"object\",\"type\":\"UsageQuota\",\"relationName\":\"UsageQuotaToUser\"},{\"name\":\"paymentTransactions\",\"kind\":\"object\",\"type\":\"PaymentTransaction\",\"relationName\":\"PaymentTransactionToUser\"},{\"name\":\"questionRatings\",\"kind\":\"object\",\"type\":\"QuestionRating\",\"relationName\":\"QuestionRatingToUser\"},{\"name\":\"createdQuestions\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"QuestionToUser\"},{\"name\":\"adminSubscriptionLogs\",\"kind\":\"object\",\"type\":\"AdminSubscriptionLog\",\"relationName\":\"AdminSubscriptionLogToUser\"},{\"name\":\"targetAdminLogs\",\"kind\":\"object\",\"type\":\"AdminSubscriptionLog\",\"relationName\":\"AdminLogTargetUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"users\"},\"Question\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"QuestionType\"},{\"name\":\"difficulty\",\"kind\":\"enum\",\"type\":\"DifficultyLevel\"},{\"name\":\"source\",\"kind\":\"enum\",\"type\":\"QuestionSource\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"QuestionStatus\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"correctAnswer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"explanation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioScript\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualityScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"difficultyScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"averageTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"successRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuestionToUser\"},{\"name\":\"aiGeneratedData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewNotes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"practiceAnswers\",\"kind\":\"object\",\"type\":\"PracticeAnswer\",\"relationName\":\"PracticeAnswerToQuestion\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"QuestionRating\",\"relationName\":\"QuestionToQuestionRating\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"questions\"},\"PracticeAnswer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"PracticeAnswerToQuestion\"},{\"name\":\"userAnswer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isCorrect\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"timeSpent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"practiceRecordId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"practiceRecord\",\"kind\":\"object\",\"type\":\"PracticeRecord\",\"relationName\":\"PracticeAnswerToPracticeRecord\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"practice_answers\"},\"QuestionRating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuestionRatingToUser\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"Question\",\"relationName\":\"QuestionToQuestionRating\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clarity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"difficulty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quality\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"question_ratings\"},\"PracticeRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PracticeRecordToUser\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionType\",\"kind\":\"enum\",\"type\":\"QuestionType\"},{\"name\":\"difficulty\",\"kind\":\"enum\",\"type\":\"DifficultyLevel\"},{\"name\":\"questionsCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correctAnswers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"realQuestions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"aiPoolQuestions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"realtimeQuestions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"practiceAnswers\",\"kind\":\"object\",\"type\":\"PracticeAnswer\",\"relationName\":\"PracticeAnswerToPracticeRecord\"},{\"name\":\"questions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"practice_records\"},\"ChatSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ChatSessionToUser\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"ChatMessage\",\"relationName\":\"ChatMessageToChatSession\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"chat_sessions\"},\"ChatMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session\",\"kind\":\"object\",\"type\":\"ChatSession\",\"relationName\":\"ChatMessageToChatSession\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"chat_messages\"},\"VocabularyItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVocabularyItem\"},{\"name\":\"word\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"definition\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phonetic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"meanings\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"language\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reading\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jlpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commonality\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mastered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"definitionLoading\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"definitionError\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"nextReviewDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correctCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"incorrectCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"easeFactor\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastReviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"vocabulary_items\"},\"StudyProgress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StudyProgressToUser\"},{\"name\":\"questionType\",\"kind\":\"enum\",\"type\":\"QuestionType\"},{\"name\":\"difficulty\",\"kind\":\"enum\",\"type\":\"DifficultyLevel\"},{\"name\":\"totalQuestions\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"correctAnswers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"averageTime\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"bestScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastPracticeAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"study_progress\"},\"SubscriptionPlan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nameJp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priceCents\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"interval\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"intervalCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stripePriceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeProductId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"features\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"dailyPracticeLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dailyAiChatLimit\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxVocabularyWords\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"UserSubscription\",\"relationName\":\"SubscriptionPlanToUserSubscription\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"subscription_plans\"},\"UserSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSubscription\"},{\"name\":\"planId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan\",\"kind\":\"object\",\"type\":\"SubscriptionPlan\",\"relationName\":\"SubscriptionPlanToUserSubscription\"},{\"name\":\"stripeCustomerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSubscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripeSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"trialStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trialEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currentPeriodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cancelAtPeriodEnd\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"canceledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastPaymentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"nextPaymentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isTestAccount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"paymentTransactions\",\"kind\":\"object\",\"type\":\"PaymentTransaction\",\"relationName\":\"PaymentTransactionToUserSubscription\"},{\"name\":\"adminSubscriptionLogs\",\"kind\":\"object\",\"type\":\"AdminSubscriptionLog\",\"relationName\":\"AdminSubscriptionLogToUserSubscription\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_subscriptions\"},\"UsageQuota\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UsageQuotaToUser\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usedCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"limitCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"usage_quotas\"},\"PaymentTransaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentTransactionToUser\"},{\"name\":\"stripeSessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stripePaymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"UserSubscription\",\"relationName\":\"PaymentTransactionToUserSubscription\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"payment_transactions\"},\"APIUsage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"endpoint\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statusCode\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"responseTime\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"api_usage\"},\"TokenBlacklist\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tokenId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"token_blacklist\"},\"AdminSubscriptionLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminSubscriptionLogToUser\"},{\"name\":\"targetUserId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"targetUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AdminLogTargetUser\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"UserSubscription\",\"relationName\":\"AdminSubscriptionLogToUserSubscription\"},{\"name\":\"operationType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldTestAccount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"newTestAccount\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"admin_subscription_logs\"},\"EmailLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"EmailType\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"EmailStatus\"},{\"name\":\"recipientEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"recipientName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"templateData\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"htmlContent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailProvider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerEmailId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"openedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"clickedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"retryCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxRetries\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"email_logs\"},\"EmailTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"EmailType\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"variables\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"usageCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastUsedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"email_templates\"},\"UserEmailPreference\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"receiveSecurityAlerts\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receiveSystemNotify\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receiveWeeklyReport\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receiveFeatureNews\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"receivePromotional\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"weeklyReportDay\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promotionalFrequency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"globalUnsubscribe\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"unsubscribeToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unsubscribedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"user_email_preferences\"},\"EmailStats\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"totalSent\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalDelivered\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalFailed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalBounced\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalOpened\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalClicked\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalUnsubscribed\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalComplaints\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"verificationEmails\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"notificationEmails\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"marketingEmails\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"openRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"clickRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"deliveryRate\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"email_stats\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

